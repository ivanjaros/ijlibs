package epp

import (
	"emperror.dev/errors"
)

var (
	ErrCommandSyntax           = errors.Sentinel("invalid command syntax")
	ErrNoObjects               = errors.Sentinel("no objects provided")
	ErrNoObject                = errors.Sentinel("no object provided")
	ErrTooManyObjects          = errors.Sentinel("too many objects provided")
	ErrNoObjectID              = errors.Sentinel("missing object identifier")
	ErrDomainName              = errors.Sentinel("invalid domain name")
	ErrID                      = errors.Sentinel("invalid id")
	ErrName                    = errors.Sentinel("invalid name")
	ErrNoClientID              = errors.Sentinel("missing client id")
	ErrNoPassword              = errors.Sentinel("missing password")
	ErrVersion                 = errors.Sentinel("unsupported version")
	ErrLanguage                = errors.Sentinel("unsupported language")
	ErrService                 = errors.Sentinel("unknown service")
	ErrExtension               = errors.Sentinel("unknown extension")
	ErrUnexpectedMessageID     = errors.Sentinel("unexpected message id")
	ErrNoMessageID             = errors.Sentinel("no message id provided")
	ErrOperation               = errors.Sentinel("unknown operation")
	ErrPeriodType              = errors.Sentinel("unknown period")
	ErrPeriodLength            = errors.Sentinel("invalid period")
	ErrNoCommand               = errors.Sentinel("no command provided")
	ErrTooManyCommands         = errors.Sentinel("too many commands provided")
	ErrContactID               = errors.Sentinel("invalid contact id")
	ErrPostalType              = errors.Sentinel("unknown postal information type")
	ErrPostalName              = errors.Sentinel("invalid name in postal information")
	ErrPostalOrg               = errors.Sentinel("invalid organization in postal information")
	ErrPostalStreet            = errors.Sentinel("invalid street in postal information")
	ErrPostalCity              = errors.Sentinel("invalid city in postal information")
	ErrPostalState             = errors.Sentinel("invalid StateCode in postal information")
	ErrPostalCode              = errors.Sentinel("invalid PostalCode in postal information")
	ErrPostalCountry           = errors.Sentinel("invalid CountryCode in postal information")
	ErrVoice                   = errors.Sentinel("invalid voice information")
	ErrFax                     = errors.Sentinel("invalid fax information")
	ErrEmail                   = errors.Sentinel("invalid email information")
	ErrNoNS                    = errors.Sentinel("missing name server information")
	ErrNoNSs                   = errors.Sentinel("missing name servers")
	ErrNSDuplicate             = errors.Sentinel("duplicate name server")
	ErrNS                      = errors.Sentinel("invalid name server object")
	ErrNSNoName                = errors.Sentinel("missing name server host name")
	ErrNSName                  = errors.Sentinel("invalid name server host name")
	ErrNSFew                   = errors.Sentinel("too few name servers provided")
	ErrNSMany                  = errors.Sentinel("too many name servers provided")
	ErrNsForbiddenAttr         = errors.Sentinel("host attribute is not supported")
	ErrNSAddress               = errors.Sentinel("invalid name server address")
	ErrNSAddrCount             = errors.Sentinel("invalid number of addresses")
	ErrContactType             = errors.Sentinel("unknown contact type provided")
	ErrContactTypeMany         = errors.Sentinel("too many identical contact types provided")
	ErrNoContactInfo           = errors.Sentinel("missing contact information")
	ErrStatus                  = errors.Sentinel("invalid status")
	ErrRegistrant              = errors.Sentinel("invalid registrant")
	ErrNoAuthInfo              = errors.Sentinel("missing authentication information")
	ErrAuthType                = errors.Sentinel("invalid authentication type")
	ErrTooManyAuth             = errors.Sentinel("only one authentication information can be provided")
	ErrInvalidExtension        = errors.Sentinel("invalid extension information")
	ErrDNSDuplicate            = errors.Sentinel("duplicate DNS entry")
	ErrIP                      = errors.Sentinel("invalid IP address")
	ErrIPDuplicate             = errors.Sentinel("duplicate IP addresses")
	ErrDateFormat              = errors.Sentinel("invalid date format")
	ErrDNSBothDSTypes          = errors.Sentinel("only dsData or dsKey elements can be present, not both")
	ErrDnsMaxSigLife           = errors.Sentinel("server does not support secDNS:maxSigLife option")
	ErrDnsDigestType           = errors.Sentinel("invalid digest type, only SHA-1 is supported")
	ErrDnsAlgorithm            = errors.Sentinel("invalid algorithm")
	ErrDnsDigest               = errors.Sentinel("invalid digest value")
	ErrDnsFlag                 = errors.Sentinel("invalid flag value")
	ErrDnsInvalidPubKey        = errors.Sentinel("invalid public key; not a base64 encoded string")
	ErrDnsProtocol             = errors.Sentinel("invalid protocol")
	ErrDnsUrgent               = errors.Sentinel("urgent attribute is not supported")
	ErrDnsUpdateNothing        = errors.Sentinel("no changes provided")
	ErrRestoreOp               = errors.Sentinel("unknown restore operation")
	ErrRestoreReportPresent    = errors.Sentinel("unexpected restore report")
	ErrRestoreReportNotPresent = errors.Sentinel("missing restore report")
	ErrRestoreDelTime          = errors.Sentinel("invalid deletion time")
	ErrRestoreTime             = errors.Sentinel("invalid restoration time")
	ErrRestoreStatement        = errors.Sentinel("invalid statements")
)
